pipeline {
    agent {
        label 'e2e-sdet'
    }

    options {
        skipDefaultCheckout(true)
    }

    environment {
        REPO_URL = 'https://github.com/shipsy/ops-dashboardv2-e2e.git'
        MAJOR_BRANCH = 'Major'
        MAIN_BRANCH = 'main'
        SLACK_WEBHOOK = credentials("INTERNAL-COMMENTED-SLACK-URL") // Replace with your Slack Webhook credential
    }

    stages {
        stage('Check Branches') {
            steps {
                script {
                    // Fetch the commit hashes for the Major and Main branches
                    def majorBranchHash = sh(script: "git ls-remote ${REPO_URL} refs/heads/${MAJOR_BRANCH} | cut -f1", returnStdout: true).trim()
                    def mainBranchHash = sh(script: "git ls-remote ${REPO_URL} refs/heads/${MAIN_BRANCH} | cut -f1", returnStdout: true).trim()

                    echo "Major Branch Hash: ${majorBranchHash}"
                    echo "Main Branch Hash: ${mainBranchHash}"

                    // Compare the hashes to check if branches are in sync
                    if (majorBranchHash != mainBranchHash) {
                        echo "Branches are NOT up to date"
                        sendSlackMessage("üö® *Branches Out of Sync* üö®\nBranches `${MAJOR_BRANCH}` and `${MAIN_BRANCH}` in `${REPO_URL}` are NOT up to date.")
                    } else {
                        echo "Branches are up to date"
                        sendSlackMessage("‚úÖ *Branches In Sync* ‚úÖ\nBranches `${MAJOR_BRANCH}` and `${MAIN_BRANCH}` in `${REPO_URL}` are up to date.")
                    }
                }
            }
        }
    }

    post {
        failure {
            script {
                sendSlackMessage("‚ö†Ô∏è Jenkins job failed while checking branches in `${REPO_URL}`.")
            }
        }
    }
}

def sendSlackMessage(message) {
    // Function to send Slack message using webhook
    sh """
    curl -X POST --data-urlencode 'payload={"text": "${message}"}' ${SLACK_WEBHOOK}
    """
}
